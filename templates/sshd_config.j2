#jinja2: lstrip_blocks:True, trim_blocks: True

{{ ansible_managed|comment }}

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

################################################################################

Port {{ sshd__port }}
AddressFamily {{ sshd__address_family }}
{% for _address in sshd__listen_address %}
ListenAddress {{ _address }}
{% endfor %}

Protocol 2
{% if sshd__hostkey %}
# HostKeys for protocol version 2
{% for _item in sshd__hostkey %}
HostKey {{ _item }}
{% endfor %}
{% endif %}

# Ciphers and keying
#RekeyLimit default none

{% if sshd__kexalgorithms is defined and sshd__kexalgorithms %}
KexAlgorithms {{ sshd__kexalgorithms|join(',') }}
{% endif %}
{% if sshd__ciphers is defined and sshd__ciphers %}
Ciphers {{ sshd__ciphers|join(',') }}
{% endif %}
{% if sshd__macs is defined and sshd__macs %}
MACs {{ sshd__macs|join(',') }}
{% endif %}

# Logging
SyslogFacility  {{ sshd__syslogfacility }}
LogLevel {{ sshd__loglevel }}

# Authentication:

LoginGraceTime {{ sshd__logingracetime }}
PermitRootLogin {{ sshd__permit_root_login }}
StrictModes yes
MaxAuthTries {{ sshd__maxauthtries }}
MaxSessions {{ sshd__maxsessions }}

{% if sshd__authenticationmethods is defined and sshd__authenticationmethods %}
AuthenticationMethods {{ sshd__authenticationmethods }}
{% endif %}

PubkeyAuthentication {{ sshd__pubkeyauthentication|ternary('yes','no') }}

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	{{ sshd__authorizedkeysfile }}

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no

# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
PasswordAuthentication {{ sshd__password_authentication|ternary('yes','no') }}
PermitEmptyPasswords no

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication {{ sshd__challengeresponseauthentication|ternary('yes','no') }}

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options

GSSAPIAuthentication {{ sshd__gssapiauthentication|ternary('yes','no') }}
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Red Hat Enterprise Linux and may cause several
# problems.
UsePAM yes

{% if sshd__allowagentforwarding is defined and  sshd__allowagentforwarding %}
AllowAgentForwarding {{ sshd__allowagentforwarding|ternary('yes','no') }}
{% endif %}

{% if sshd__allowtcpforwarding is defined and sshd__allowtcpforwarding%}
AllowTcpForwarding {{ sshd__allowtcpforwarding|ternary('yes','no') }}
{% endif %}

#GatewayPorts no
X11Forwarding {{ sshd__x11forwarding|ternary('yes','no') }}
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes
PrintMotd {{ sshd__printmotd|ternary('yes','no') }}

{% if sshd__printlastlog is defined %}
PrintLastLog {{ sshd__printlastlog|ternary('yes','no') }}
{% endif %}

#TCPKeepAlive yes
#UseLogin no
{% if sshd__useprivilegeseparation is defined %}
UsePrivilegeSeparation {{ sshd__useprivilegeseparation }}
{% endif %}
#PermitUserEnvironment no
#Compression delayed
ClientAliveInterval {{ sshd__clientaliveinterval }}
ClientAliveCountMax {{ sshd__clientalivecountmax }}
#ShowPatchLevel no
UseDNS {{ sshd__usedns|ternary('yes','no') }}
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
PermitTunnel {{ sshd__permittunnel|ternary('yes','no') }}
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
{% if sshd__acceptenv is defined %}
{% for _ENV in sshd__acceptenv %}
AcceptEnv {{ _ENV }}
{% endfor %}
{% endif %}

# override default of no subsystems
Subsystem	sftp	{{ sshd__subsystem_sftp }} {{ sshd__subsystem_sftp_options }}

{%if sshd__denyusers is defined and sshd__denyusers %}
DenyUsers {{ sshd__denyusers|join(' ') }}
{% endif %}
{% if sshd__allowusers is defined and sshd__allowusers %}
AllowUsers {{ sshd__allowusers|join(' ') }}
{% endif %}
{% if sshd__denygroups is defined and sshd__denygroups %}
DenyGroups {{ sshd__denygroups|join(' ') }}
{% endif %}
{% if sshd__allowgroups is defined and sshd__allowgroups %}
AllowGroups {{ sshd__allowgroups|join(' ') }}
{% endif %}

# Example of overriding settings on a per-user basis
#Match User anoncvs
#
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server
